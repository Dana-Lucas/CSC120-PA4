/* CSC 120, PA4
 * Dana Lucas
 * 10/18/19
 *
 * Project Description: This program uses the moon class from PA2 to develop GUI components in the MUFrame. 
 *                      Text fields are presented where the user types in the data needed for the moon class
 *                      and two buttons process the data related to the inputted data. The Process Form Data 
 *                      button writes out the toString method from PA2 in the textArea and the Display Numeric
 *                      stats button calculates the total, average, maximum, and minimum masses of the moons.
 *
 * Acknowledgements:
 * 
 */

import java.awt.*;
import javax.swing.*;
import java.text.DecimalFormat;

public class MUFrame extends javax.swing.JFrame {

    
    // declare private data here
    private Integer count;
    private Moon moon;
    private Integer radius;
    private Double mass, sg;
    private Boolean oxygen;
    private Integer max, min, total;
    private Double average;
    
    
    
    
    // constructor method
    public MUFrame() {
        initComponents();
        count = 0;
        total = 0;
        max = Integer.MIN_VALUE;
        min = Integer.MAX_VALUE;
        
        
    } // end of constructor
    
    // declare other methods here

    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        drawingPanel = new javax.swing.JPanel();
        moonNameField = new javax.swing.JTextField();
        nameLabel = new javax.swing.JLabel();
        radiusLabel = new javax.swing.JLabel();
        massLabel = new javax.swing.JLabel();
        surfaceGravityLabel = new javax.swing.JLabel();
        oxygenLabel = new javax.swing.JLabel();
        moonRadiusField = new javax.swing.JTextField();
        moonMassField = new javax.swing.JTextField();
        moonSurfaceGravityField = new javax.swing.JTextField();
        moonOxygenField = new javax.swing.JTextField();
        processFormDataButton = new javax.swing.JButton();
        displayNumericStatsButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        titleLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Program authored by Dana Lucas");

        moonNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moonNameFieldActionPerformed(evt);
            }
        });

        nameLabel.setText("Name of Moon:");

        radiusLabel.setText("Radius of Moon (integer value in km):");

        massLabel.setText("Mass of Moon (kg):");

        surfaceGravityLabel.setText("Surface Gravity on Moon (m/s^2):");

        oxygenLabel.setText("True or false that there's oxygen in the atmosphere?:");

        moonRadiusField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moonRadiusFieldActionPerformed(evt);
            }
        });

        moonMassField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moonMassFieldActionPerformed(evt);
            }
        });

        moonSurfaceGravityField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moonSurfaceGravityFieldActionPerformed(evt);
            }
        });

        moonOxygenField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moonOxygenFieldActionPerformed(evt);
            }
        });

        processFormDataButton.setText("Process Form Data");
        processFormDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processFormDataButtonActionPerformed(evt);
            }
        });

        displayNumericStatsButton.setText("Display Numeric Statistics");
        displayNumericStatsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayNumericStatsButtonActionPerformed(evt);
            }
        });

        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);

        titleLabel.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(120, 0, 100));
        titleLabel.setText("CSC 120 PA4 - Dana Lucas");

        javax.swing.GroupLayout drawingPanelLayout = new javax.swing.GroupLayout(drawingPanel);
        drawingPanel.setLayout(drawingPanelLayout);
        drawingPanelLayout.setHorizontalGroup(
            drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(drawingPanelLayout.createSequentialGroup()
                .addGroup(drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(drawingPanelLayout.createSequentialGroup()
                        .addGroup(drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(drawingPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(moonSurfaceGravityField, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, drawingPanelLayout.createSequentialGroup()
                                .addGap(151, 151, 151)
                                .addGroup(drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(drawingPanelLayout.createSequentialGroup()
                                        .addComponent(processFormDataButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(displayNumericStatsButton))
                                    .addGroup(drawingPanelLayout.createSequentialGroup()
                                        .addGroup(drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(radiusLabel)
                                            .addComponent(nameLabel)
                                            .addComponent(massLabel)
                                            .addComponent(surfaceGravityLabel)
                                            .addComponent(oxygenLabel))
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(drawingPanelLayout.createSequentialGroup()
                                                .addGap(30, 30, 30)
                                                .addComponent(moonOxygenField, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(moonMassField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(moonRadiusField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(moonNameField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(121, 121, 121))
                    .addGroup(drawingPanelLayout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jScrollPane1)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, drawingPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(titleLabel)
                .addGap(198, 198, 198))
        );
        drawingPanelLayout.setVerticalGroup(
            drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(drawingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel)
                .addGap(26, 26, 26)
                .addGroup(drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(moonNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameLabel))
                .addGap(18, 18, 18)
                .addGroup(drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radiusLabel)
                    .addComponent(moonRadiusField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(massLabel)
                    .addComponent(moonMassField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(surfaceGravityLabel)
                    .addComponent(moonSurfaceGravityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(oxygenLabel)
                    .addComponent(moonOxygenField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59)
                .addGroup(drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(processFormDataButton)
                    .addComponent(displayNumericStatsButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(drawingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(drawingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void moonNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moonNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_moonNameFieldActionPerformed

    private void moonRadiusFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moonRadiusFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_moonRadiusFieldActionPerformed

    private void moonMassFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moonMassFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_moonMassFieldActionPerformed

    private void moonSurfaceGravityFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moonSurfaceGravityFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_moonSurfaceGravityFieldActionPerformed

    private void moonOxygenFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moonOxygenFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_moonOxygenFieldActionPerformed

    private void displayNumericStatsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayNumericStatsButtonActionPerformed
//        DecimalFormat averageFormat = new DecimalFormat("0.000");
//        average = averageFormat.format(1.0*total/count);
        average = 1.0*total/count;
        textArea.append("========================\n");
        textArea.append("The total radius of all the moons entered so far is " + total + " km.\n\n");
        textArea.append("The average radius of all the moons entered so far is " + average + " km.\n\n");
        textArea.append("The minimum radius is " + min + " km.\n\nThe maximum radius is " + max + " km.\n");
        textArea.append("========================\n\n");
    }//GEN-LAST:event_displayNumericStatsButtonActionPerformed

    private void processFormDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processFormDataButtonActionPerformed

        String moonMass = moonMassField.getText();
        String moonRadius = moonRadiusField.getText();
        String moonName = moonNameField.getText();
        String moonSurfaceGravity = moonSurfaceGravityField.getText();
        String moonOxygen = moonOxygenField.getText();
        
        radius = Integer.parseInt(moonRadius);
        mass = Double.parseDouble(moonMass);
        sg = Double.parseDouble(moonSurfaceGravity);
        oxygen = Boolean.parseBoolean(moonOxygen);
        moon = new Moon(moonName, radius, mass, sg, oxygen);
        textArea.append(moon.toString());
        
        total += moon.getRadius();
        
        if(radius < min){
            min = radius;
            }
        if(radius > max){
            max = radius;
            }

        count++;
        
        textArea.append("\n\tnumber of moons entered so far: " + count + "\n\n");
    }//GEN-LAST:event_processFormDataButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MUFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton displayNumericStatsButton;
    private javax.swing.JPanel drawingPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel massLabel;
    private javax.swing.JTextField moonMassField;
    private javax.swing.JTextField moonNameField;
    private javax.swing.JTextField moonOxygenField;
    private javax.swing.JTextField moonRadiusField;
    private javax.swing.JTextField moonSurfaceGravityField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel oxygenLabel;
    private javax.swing.JButton processFormDataButton;
    private javax.swing.JLabel radiusLabel;
    private javax.swing.JLabel surfaceGravityLabel;
    private javax.swing.JTextArea textArea;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
